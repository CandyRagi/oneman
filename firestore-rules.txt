# Firestore Security Rules for Oneman App
# Copy and paste these rules into your Firebase Console > Firestore Database > Rules

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Sites collection - users can read/write if they are members
    match /sites/{siteId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid in resource.data.members || 
         request.auth.uid == resource.data.adminId);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.adminId;
    }
    
    // Stores collection - users can read/write if they are members
    match /stores/{storeId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid in resource.data.members || 
         request.auth.uid == resource.data.adminId);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.adminId;
    }
    
    // Messages subcollections - users can read/write if they are group members
    match /sites/{siteId}/messages/{messageId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in get(/databases/$(database)/documents/sites/$(siteId)).data.members;
    }
    
    match /stores/{storeId}/messages/{messageId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in get(/databases/$(database)/documents/stores/$(storeId)).data.members;
    }
    
    // User profiles - users can read/write their own data, and search by username
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null; // Allow reading for user search
    }
  }
}

# Alternative simpler rules for development (less secure but easier to test):
# 
# rules_version = '2';
# service cloud.firestore {
#   match /databases/{database}/documents {
#     match /{document=**} {
#       allow read, write: if request.auth != null;
#     }
#   }
# }
